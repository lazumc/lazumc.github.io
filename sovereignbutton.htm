<!DOCTYPE html>
<html>
<head>
<!-- Give page very basic compatiblity with smart phone screen -->
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
<style>
	/* Force chat window to width 480px, no inset and no rounded edges */
	/* Note: Cannot force height here as JS uses height attribute to make chat window open/close */
	.__8x8Chat-Container {
		border-radius: 0px !important;
		width: 480px !important;
		filter: box-shadow(0px 0px 5px #000000) !important;
		inset: auto 0px 0px auto !important;
	}

	/* Force chat to fill width of smart phone screen */
	@media screen and (max-width: 480px){
		.__8x8Chat-Container {
			width: 100% !important;
		}
	}

	/* Style chat button */
	img[alt="Chat Now"]{
		width: 80px; 
		height: 80px; 
		border-radius: 50%;
	}
	
	.custom-webchat-button-image {
		width: 80px; 
		height: 80px; 
		border-radius: 50%;
		position: absolute;
        bottom: 20px;
        left:20px;
	}
	
	.tooltip {
		display: none;
		position: absolute;
		background-color: #ffffff;
		color: #fff;
		border: 2px solid #000000;
		border-radius: 0px;
		filter: box-shadow(0px 0px 5px #000000)
		z-index: 1;
		height: 120px;
		width: 300px;
		bottom: 120px;
        left:20px;
		font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
		font-size: 0.9rem;
	}
	
	.tooltipHeader {
		background-color: #a8d1e5;
		color: #000000;
		padding: 10px;
		border-radius: 0px;
		min-height: 20px;
	}

	.tooltipBody {
		background-color: #ffffff;
		color: #000000;
		padding: 10px;
		border-radius: 0px;
	}
	
	.closeButton {
		position: absolute;
		top: 10px;
		right: 10px;
		cursor: pointer;
		color: #000000;
	}

	.closeImage {
		transform: rotate(180deg);
	}

</style>
</head>
<body bgcolor="#dddddd" style="width: 100%; max-width: 100%">

<img src="https://lazumc.github.io/images/sovereign.png" width="100%">

<!-- New button to invoke chat calling the launchChat() function. -->
<button id="myButton" onclick="launchChat()" class="custom-webchat-button">
  <img class="custom-webchat-button-image" src="https://lazumc.github.io/images/SNG logo - Black.png">
</button>

<!-- Place this code snippet anywhere you want the button to appear in your page. If no button has been configured in the chat script, it will not show up nor take any space. -->
<div id="__8x8-chat-button-container-script_101037146064e36bd89b5038.39282807" style="position:fixed; bottom:20px; right:20px; border:0px; width: 80px; height 80px; border-radius: 50%">
</div>
<div class="tooltip" id="tooltip">
  <div class="tooltipHeader">
	<span class="tooltipHeaderText">Ask me</span>
	<span class="closeButton" id="closeButton">
	  <svg id="closeImage" class="closeImage" role="presentation" width="14" height="14" viewBox="0 0 14 14" fill="#000000" xmlns="http://www.w3.org/2000/svg">
		<title>Close</title>
		<path d="M13.5303 1.53033C13.8232 1.23744 13.8232 0.762563 13.5303 0.46967C13.2374 0.176777 12.7626 0.176777 12.4697 0.46967L7 5.93934L1.53033 0.469671C1.23744 0.176778 0.762563 0.176778 0.46967 0.469671C0.176777 0.762564 0.176777 1.23744 0.46967 1.53033L5.93934 7L0.469671 12.4697C0.176777 12.7626 0.176777 13.2374 0.469671 13.5303C0.762564 13.8232 1.23744 13.8232 1.53033 13.5303L7 8.06066L12.4697 13.5303C12.7626 13.8232 13.2374 13.8232 13.5303 13.5303C13.8232 13.2374 13.8232 12.7626 13.5303 12.4697L8.06066 7L13.5303 1.53033Z"></path>
      </svg>
	</span>
  </div>
  <div class="tooltipBody" id="tooltipBody">
	<span class="tooltipText" id="tooltipText">Placeholder message.</span>
  </div>
</div>

<!-- This script will not interfere with the button layout, you just need to include it in the same page. It must also be within the <body> section of the page, preferably just before the ending tag. -->
<script type="text/javascript">
    window.__8x8Chat = {
        uuid: "script_101037146064e36bd89b5038.39282807",
        tenant: "c292ZXJlaWduaG91c2luZzAx",
        channel: "CSMC Bot Web Chat - Test",
        channelUuid: "gpoQXp5HSAaEFuwou8bxkA",
        domain: "https://vcc-eu6.8x8.com",
        path: "/.",
        buttonContainerId: "__8x8-chat-button-container-script_101037146064e36bd89b5038.39282807",
        stylesheetURL: "https://lazumc.github.io/sovereign.css",
        align: "right",
		<!-- Triggered on initialisation to define window.bus which is  used to launch chat in custom button -->
		onInit: function (bus) {
		   window.bus = bus;
		}
    };

    (function() {
        var se = document.createElement("script");
        se.type = "text/javascript";
        se.async = true;
        se.src = window.__8x8Chat.domain + window.__8x8Chat.path + "/CHAT/common/js/chat.js";

        var os = document.getElementsByTagName("script")[0];
        os.parentNode.insertBefore(se, os);
    })();
</script>

<!-- New launchChat() function to invoke chat (note this requires the onInit section to define window.bus in the main chat script above to work. -->
<script>
function launchChat() 
{
   bus.publish("chat:trigger-chat-window")
}   
</script>

<script type="text/javascript">
const button = document.getElementById("myButton");
const tooltip = document.getElementById("tooltip");
const tooltipText = document.getElementById("tooltipText");
const closeButton = document.getElementById("closeButton");
const closeImage = document.getElementById("closeImage");

// Messages to display in the tooltip
const messages = [
  "about booking a new repair, or",
  "about an upcoming appointment, or",
  "about your rent or service charge account.",
];

let currentMessageIndex = 0;

// Function to show the tooltip
function showTooltip() {
  tooltip.style.display = "block";
  tooltipText.innerHTML = messages[currentMessageIndex];
  closeImage.style.transform = "rotate(360deg)";
  currentMessageIndex = (currentMessageIndex + 1) % messages.length;
};

// Function to hide the tooltip
function hideTooltip() {
  tooltip.style.display = "none";
  clearInterval(tooltipInterval);
};

// Close the tooltip when the close button is clicked
closeButton.addEventListener("click", () => {
  hideTooltip();
});

// Set a timeout to show the tooltip after 5 seconds
const tooltipInterval=setInterval(showTooltip, 5000); // 5,000 milliseconds = 5 seconds

// Show the tooltip when hovering over the button
button.addEventListener("mouseover", () => {
  tooltip.style.display = "block";
});

</script>

</body>
</html>

