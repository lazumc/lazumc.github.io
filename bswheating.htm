<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
<link href='https://fonts.cdnfonts.com/css/lato' rel='stylesheet' type='text/css'>
<style>
	/* Force chat window to width 480px, no inset and no rounded edges */
	/* Note: Cannot force height here as JS uses height attribute to make chat window open/close */
	.__8x8Chat-Container {
		width: 400px !important;
        box-shadow: -5px 5px 30px #444444 !important;
		inset: auto 10px 10px auto !important;
	}

	/* Force chat to fill width of smart phone screen */
	@media screen and (max-width: 480px){
		.__8x8Chat-Container {
			width: 100% !important;
		}
	}

	/* Position and style customer defined chat button */
	.custom-webchat-button {
		border-radius: 5px;
		border: 0px solid #030303;
		background-color: #e88613;
		padding: 15px 15px 10px 10px;
		cursor: pointer;
		position: fixed;
		bottom: 20px;
		right: 20px;
		line-height: 15px;
	}
  
	.scrolled-button {
		padding: 15px 10px 10px 10px;
	}
  
	.custom-webchat-button-text {
		font-size: 1rem;
		font-weight: 400;
		font-family: lato;
		color: #ffffff;
		position:relative;
		left:3px;
		bottom: 3px;
     }
		
   /* Hide the text when scrolled */
	.scrolled-button-text {
		display: none;
	}
    
    .title-box {
    	font-family: transport;
        background-color: #ffffff;
        color: #030303;
    	padding:  20px 20px 0px 20px;
    	border: 2px solid #030303;
    	border-radius: 5px;
    	box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    	position: fixed;
		top: 30px;
		left: 30px;
  	}
    
    .logo {
    	position: fixed;
		top: 30px;
		right: 20px;
  	}
	
 </style>
</head>
<body bgcolor="#fefefe" style="width: 100%; max-width: 100%">

<img src="https://lazumc.github.io/images/bswbackground.png" width="100%">
<img src="https://lazumc.github.io/images/bswbackground1.png" width="100%">
<img src="https://lazumc.github.io/images/bswbackground2.png" width="100%">
<img src="https://lazumc.github.io/images/bswbackground3.png" width="100%">
<img src="https://lazumc.github.io/images/bswbackground4.png" width="100%">

<!-- New button. -->
<button id="custom-webchat-button" class="custom-webchat-button" onclick="launchChat()" onmouseenter="showTextOnHover()" onmouseleave="hideTextOnLeave()">
  <svg xmlns="http://www.w3.org/2000/svg" version="1.0" width="16pt" height="12pt" viewBox="0 0 256 256" preserveAspectRatio="xMidYMid meet">
	<g transform="translate(0.000000,256.000000) scale(0.100000,-0.100000)" fill="#ffffff" stroke="none">
	<path d="M135 2421 c-22 -10 -54 -34 -72 -52 -66 -70 -63 -32 -63 -851 0 -702 1 -745 19 -783 10 -22 34 -54 52 -72 57 -53 93 -63 239 -63 l130 0 0 -260 c0 -252 1 -260 21 -270 16 -9 26 -8 43 4 13 8 148 130 300 270 l276 256 653 0 c728 0 694 -3 764 71 66 70 63 32 63 849 0 817 3 779 -63 849 -18 18 -50 42 -72 52 -38 18 -90 19 -1145 19 -1055 0 -1107 -1 -1145 -19z"/>
	</g>
  </svg>
  <span id="custom-webchat-button-text" class="custom-webchat-button-text">Chat with us</span>
</button>

    <!-- Place this code snippet anywhere you want the button to appear in your page. If no button has been configured in the chat script, it will not show up nor take any space. -->
    <div id="__8x8-chat-button-container-script_60342018268b327d0b1e266.54639514" style="visibility:hidden"></div>

    <!-- This script will not interfere with the button layout, you just need to include it in the same page. It must also be within the <body> section of the page, preferably just before the ending tag. -->
    <script type="text/javascript">
    (function(c, f, ef){
        var typeofC = Object.prototype.toString.call(c);
        var props = (typeofC === '[object Object]' && c) || {};
        var cb = f || (typeofC === '[object Function]' && c);
        var config = {
            scriptUuid: "script_60342018268b327d0b1e266.54639514",
            tenant: "YnN3aGVhdGluZ2x0ZDAx",
            channelName: "ICA Bot - Dev",
            channelUuid: "ChpoDRHcQLibXKioYiGn3A",
            domain: "https://vcc-eu9.8x8.com",
            buttonContainerId: "__8x8-chat-button-container-script_60342018268b327d0b1e266.54639514",
            align: "right",
            themeCustom: {
            	"chatBackgroundColor": "#ffffff",  
    			"chatBorderRadius": "8px",  
    			"chatShadow": "12px 8px 20px 0px",  
    			"chatTextColor": "#314252",
    			"chatLoaderColor": "#ffffff",
    			"headerBackgroundColor": "#2d3e50",
                "headerTextColor": "#ffffff",  
    			"headerIconColor": "#ffffff", 
    			"headerIconBackgroundColorHover": "#314253",  
    			"headerIconBackgroundColorActive": "#777777",  
    			"headerMenuBackgroundColor": "#ffffff",  
    			"headerMenuBorderRadius": "6px",  
    			"headerMenuBorderColor": "#314253",  
    			"headerMenuBorderWidth": "1px", 
    			"headerMenuShadow": "2px 3px 2px 1px",  
    			"headerMenuLinkTextColor": "#314253",  
    			"headerMenuLinkTextColorFocus": "#314253", 
    			"headerMenuLinkTextColorHover": "#314253", 
    			"headerMenuLinkBackgroundColor": "#ffffff",  
    			"headerMenuLinkBackgroundColorFocus": "#eeeee",  
    			"headerMenuLinkBackgroundColorHover": "#eeeeee", 
    			"headerMenuLinkIconColor": "#314253",
                "messageIncomingBorderRadius": "15px 15px 15px 0", 
        		"messageIncomingBackgroundColor": "#eeeeee", 
        		"messageIncomingTextColor": "#314253", 
        		"messageIncomingLinkColor": "#409ec7", 
        		"messageIncomingLinkColorHover": "#e88613",  
        		"messageIncomingLinkColorFocus": "#e88613",  
        		"messageIncomingLinkColorVisited": "#314253",  
        		"messageOutgoingBorderRadius": "15px 15px 15px 0", 
        		"messageOutgoingTextColor": "#314253",  
        		"messageOutgoingBackgroundColor": "#eeeeee",  
        		"messageOutgoingLinkColor": "#409ec7",  
        		"messageOutgoingLinkColorHover": "#e88613",  
        		"messageOutgoingLinkColorFocus": "#e88613",  
        		"messageOutgoingLinkColorVisited": "#314253",
			    "buttonPrimaryTextColor": "#ffffff",
    			"buttonPrimaryTextColorDisabled": "#888888",
    			"buttonPrimaryBackgroundColor": "#e88613",
    			"buttonPrimaryBackgroundColorHover": "#314253", 
    			"buttonPrimaryBackgroundColorActive": "#314253", 
    			"buttonPrimaryBackgroundColorDisabled": "#314253", 
    			"buttonSecondaryTextColor": "#ffffff",  
    			"buttonSecondaryTextColorDisabled": "#888888",  
    			"buttonSecondaryBackgroundColor": "#e88613", 
    			"buttonSecondaryBackgroundColorHover": "#314253", 
    			"buttonSecondaryBackgroundColorActive": "#314253",  
    			"buttonSecondaryBackgroundColorDisabled": "#314253", 
    			"buttonBorderRadius": "5px",  

            }
        };

        var url = new URL("https://cloud8-cc-geo.8x8.com/vcc-chat-channels/public/webchat/discovery");
        var params = { domain: config.domain, tenant: config.tenant, channelUuid: config.channelUuid };
        url.search = new URLSearchParams(params).toString();
        fetch(url)
            .then(response => response.json())
            .then(data => config.domain = !data.domain ? config.domain : data.domain)
            .catch(error => console.warn('Failed to retrieve override domain, will continue using ', config.domain, error))
            .finally(() => loadChat());

        function loadChat() {
            var se = document.createElement("script");
            se.type = "text/javascript";
            se.async = true;
            se.src = props.loaderURL || (config.domain + "/CHAT/common/js/chatv3.js");
            Object.keys(config).forEach(function (k) { se.dataset[k] = config[k] });
            Object.keys(props).forEach(function (k) { se.dataset[k] = props[k] });
            function handleInitEvent(e) {
                var initFn = e.detail.init;
                initFn(config, cb);
                se.removeEventListener('init', handleInitEvent)
            }
            function handleErrorEvent(e) {
                ef && ef(e);
                se.removeEventListener('customerror', handleErrorEvent);
            }
            se.addEventListener('init', handleInitEvent);
            se.addEventListener('customerror', handleErrorEvent);
            var os = document.getElementsByTagName("script")[0];
            os.parentNode.insertBefore(se, os);
        }
    })(function (chatApp) {
    	window.chatApp = chatApp;
      	},
    );
    
    function launchChat() {
	    window.chatApp.startChat("window")
    };
    
    // Function to toggle text visibility based on scroll
    function toggleTextVisibility() {
        var button = document.getElementById('custom-webchat-button');    
        var buttonText = document.getElementById('custom-webchat-button-text');
    	if (window.scrollY > 200) {
        	button.classList.add('scrolled-button');
			buttonText.classList.add('scrolled-button-text');
        } else {
        	button.classList.remove('scrolled-button');
        	buttonText.classList.remove('scrolled-button-text');
        }
    }

    // Function to show text on hover
    function showTextOnHover() {
        var button = document.getElementById('custom-webchat-button');    
        var buttonText = document.getElementById('custom-webchat-button-text');
        button.classList.remove('scrolled-button');
        buttonText.classList.remove('scrolled-button-text');
    }

    // Function to hide text on mouse leave
    function hideTextOnLeave() {
        var button = document.getElementById('custom-webchat-button');    
        var buttonText = document.getElementById('custom-webchat-button-text');
        // Check if the page is scrolled, if not, hide the text
        if (window.scrollY > 200) {
        	button.classList.add('scrolled-button');
			buttonText.classList.add('scrolled-button-text');
		}
	}

    // Attach scroll event listener
    window.addEventListener('scroll', toggleTextVisibility);

</script>

</body>
</html> 